// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/post_view/ChannelIntroMessages test DEFAULT Channel should match snapshot, no boards 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <SvgComponent />
  <h2
    className="channel-intro__title"
  >
    <MemoizedFormattedMessage
      defaultMessage="{name}"
      id="intro_messages.beginning"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledGlobeIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to {display_name}. Post messages here that you want everyone to see. Everyone \\\\n automatically becomes a member of this channel when they join the team."
      id="intro_messages.default"
      values={
        Object {
          "display_name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "town-square",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "town-square",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
      <button
        aria-label="Favorite"
        className="intro-links   channelIntroButton withSvg"
        id="toggleFavoriteIntroButton"
        onClick={[Function]}
      >
        <StarOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Favorite"
          id="channel_info_rhs.top_buttons.favorite"
        />
      </button>
    </span>
  </div>
  <br />
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DEFAULT Channel should match snapshot, readonly 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <SvgComponent />
  <h2
    className="channel-intro__title"
  >
    <MemoizedFormattedMessage
      defaultMessage="{name}"
      id="intro_messages.beginning"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledGlobeIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to {display_name}. Everyone automatically becomes a member of this channel when they join the team."
      id="intro_messages.readonly.default"
      values={
        Object {
          "display_name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "town-square",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
      <button
        aria-label="Favorite"
        className="intro-links   channelIntroButton withSvg"
        id="toggleFavoriteIntroButton"
        onClick={[Function]}
      >
        <StarOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Favorite"
          id="channel_info_rhs.top_buttons.favorite"
        />
      </button>
    </span>
  </div>
  <br />
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DEFAULT Channel should match snapshot, with boards 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <SvgComponent />
  <h2
    className="channel-intro__title"
  >
    <MemoizedFormattedMessage
      defaultMessage="{name}"
      id="intro_messages.beginning"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledGlobeIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to {display_name}. Post messages here that you want everyone to see. Everyone \\\\n automatically becomes a member of this channel when they join the team."
      id="intro_messages.default"
      values={
        Object {
          "display_name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "town-square",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "town-square",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
      <button
        aria-label="Favorite"
        className="intro-links   channelIntroButton withSvg"
        id="toggleFavoriteIntroButton"
        onClick={[Function]}
      >
        <StarOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Favorite"
          id="channel_info_rhs.top_buttons.favorite"
        />
      </button>
    </span>
  </div>
  <button
    aria-label="Create a board"
    className="intro-links color--link channelIntroButton style--none"
    onClick={[Function]}
  >
    <MemoizedFormattedMessage
      defaultMessage="Create a board"
      id="intro_messages.createBoard"
    />
  </button>
  <br />
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DEFAULT Channel should match snapshot, with boards, enable, group constrained 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <SvgComponent />
  <h2
    className="channel-intro__title"
  >
    <MemoizedFormattedMessage
      defaultMessage="{name}"
      id="intro_messages.beginning"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledGlobeIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to {display_name}. Post messages here that you want everyone to see. Everyone \\\\n automatically becomes a member of this channel when they join the team."
      id="intro_messages.default"
      values={
        Object {
          "display_name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "town-square",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "town-square",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
      <button
        aria-label="Favorite"
        className="intro-links   channelIntroButton withSvg"
        id="toggleFavoriteIntroButton"
        onClick={[Function]}
      >
        <StarOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Favorite"
          id="channel_info_rhs.top_buttons.favorite"
        />
      </button>
    </span>
  </div>
  <button
    aria-label="Create a board"
    className="intro-links color--link channelIntroButton style--none"
    onClick={[Function]}
  >
    <MemoizedFormattedMessage
      defaultMessage="Create a board"
      id="intro_messages.createBoard"
    />
  </button>
  <br />
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DEFAULT Channel should match snapshot, with boards. enableUserCreation 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <SvgComponent />
  <h2
    className="channel-intro__title"
  >
    <MemoizedFormattedMessage
      defaultMessage="{name}"
      id="intro_messages.beginning"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledGlobeIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to {display_name}. Post messages here that you want everyone to see. Everyone \\\\n automatically becomes a member of this channel when they join the team."
      id="intro_messages.default"
      values={
        Object {
          "display_name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "town-square",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "town-square",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
      <button
        aria-label="Favorite"
        className="intro-links   channelIntroButton withSvg"
        id="toggleFavoriteIntroButton"
        onClick={[Function]}
      >
        <StarOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Favorite"
          id="channel_info_rhs.top_buttons.favorite"
        />
      </button>
    </span>
  </div>
  <br />
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DIRECT Channel should match snapshot, with teammate, with boards 1`] = `
<div
  className="channel-intro d-flex flex-column "
  id="channelIntro"
>
  <div
    className="post-profile-img__container channel-intro-img"
  >
    <ProfilePicture
      hasMention={true}
      isEmoji={false}
      isRHS={false}
      popoverPlacement="right"
      size="xl-custom-DM"
      src="/api/v4/users/user1/image?_=0"
      userId="user1"
      wrapperClass="status-wrapper-DM"
    />
  </div>
  <h2
    className="channel-intro__title"
  >
    <Connect(UserProfile)
      disablePopover={false}
      hasMention={true}
      userId="user1"
    />
  </h2>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="This is the start of your conversation with {teammate}.\\\\Direct messages and files shared here are not shown to anyone else."
      id="intro_messages.DM"
      values={
        Object {
          "teammate": undefined,
        }
      }
    />
  </p>
  <div
    className="d-flex flex-row"
  >
    <button
      aria-label="Create a board"
      className="intro-links color--link channelIntroButton style--none"
      onClick={[Function]}
    >
      <MemoizedFormattedMessage
        defaultMessage="Create a board"
        id="intro_messages.createBoard"
      />
    </button>
    <Connect(ToggleModalButton)
      ariaLabel="Edit header"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "D",
            "update_at": 1508265709607,
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="edit_channel_header"
      noTransparent={true}
    >
      <PencilOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Edit header"
        id="intro_messages.editHeader"
      />
    </Connect(ToggleModalButton)>
    <button
      aria-label="Favorite"
      className="intro-links   channelIntroButton"
      id="toggleFavoriteIntroButton"
      onClick={[Function]}
    >
      <StarOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Favorite"
        id="channel_info_rhs.top_buttons.favorite"
      />
    </button>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DIRECT Channel should match snapshot, with teammate, without boards 1`] = `
<div
  className="channel-intro d-flex flex-column "
  id="channelIntro"
>
  <div
    className="post-profile-img__container channel-intro-img"
  >
    <ProfilePicture
      hasMention={true}
      isEmoji={false}
      isRHS={false}
      popoverPlacement="right"
      size="xl-custom-DM"
      src="/api/v4/users/user1/image?_=0"
      userId="user1"
      wrapperClass="status-wrapper-DM"
    />
  </div>
  <h2
    className="channel-intro__title"
  >
    <Connect(UserProfile)
      disablePopover={false}
      hasMention={true}
      userId="user1"
    />
  </h2>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="This is the start of your conversation with {teammate}.\\\\Direct messages and files shared here are not shown to anyone else."
      id="intro_messages.DM"
      values={
        Object {
          "teammate": "my teammate",
        }
      }
    />
  </p>
  <div
    className="d-flex flex-row"
  >
    <Connect(ToggleModalButton)
      ariaLabel="Edit header"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "D",
            "update_at": 1508265709607,
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="edit_channel_header"
      noTransparent={true}
    >
      <PencilOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Edit header"
        id="intro_messages.editHeader"
      />
    </Connect(ToggleModalButton)>
    <button
      aria-label="Favorite"
      className="intro-links   channelIntroButton"
      id="toggleFavoriteIntroButton"
      onClick={[Function]}
    >
      <StarOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Favorite"
        id="channel_info_rhs.top_buttons.favorite"
      />
    </button>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test DIRECT Channel should match snapshot, without teammate 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="This is the start of your direct message history with this teammate. Direct messages and files shared here are not shown to people outside this area."
      id="intro_messages.teammate"
    />
  </p>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test Group Channel should match snapshot, no profiles 1`] = `
<div
  className="channel-intro "
  id="channelIntro"
>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="This is the start of your group message history with these teammates. Messages and files shared here are not shown to people outside this area."
      id="intro_messages.group_message"
    />
  </p>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test Group Channel should match snapshot, with profiles, with boards 1`] = `
<div
  className="channel-intro d-flex flex-column "
  id="channelIntro"
>
  <div
    className="post-profile-img__container channel-intro-img"
  >
    <ProfilePicture
      hasMention={false}
      isEmoji={false}
      isRHS={false}
      key="introprofilepictureuser1"
      popoverPlacement="right"
      size="xl-custom-GM"
      src="/api/v4/users/user1/image?_=0"
      userId="user1"
      wrapperClass=""
    />
    <ProfilePicture
      hasMention={false}
      isEmoji={false}
      isRHS={false}
      key="introprofilepictureguest1"
      popoverPlacement="right"
      size="xl-custom-GM"
      src="/api/v4/users/guest1/image?_=0"
      userId="guest1"
      wrapperClass=""
    />
  </div>
  <h2
    className="channel-intro__title"
  >
    test channel
  </h2>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="This is the start of your group message history with {names}.\\\\nMessages and files shared here are not shown to anyone else outside the group."
      id="intro_messages.GM"
      values={
        Object {
          "names": "test channel",
        }
      }
    />
  </p>
  <div
    className="d-flex flex-row"
  >
    <button
      aria-label="Create a board"
      className="intro-links color--link channelIntroButton style--none"
      onClick={[Function]}
    >
      <MemoizedFormattedMessage
        defaultMessage="Create a board"
        id="intro_messages.createBoard"
      />
    </button>
    <Connect(ToggleModalButton)
      ariaLabel="Add people"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "G",
            "update_at": 1508265709607,
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="channel_invite"
      noTransparent={true}
    >
      <AccountPlusOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Add people"
        id="channel_info_rhs.top_buttons.add_people"
      />
    </Connect(ToggleModalButton)>
    <Connect(ToggleModalButton)
      ariaLabel="Edit header"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "G",
            "update_at": 1508265709607,
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="edit_channel_header"
      noTransparent={true}
    >
      <PencilOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Edit header"
        id="intro_messages.editHeader"
      />
    </Connect(ToggleModalButton)>
    <Connect(ToggleModalButton)
      ariaLabel="Notifications"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "G",
            "update_at": 1508265709607,
          },
          "currentUser": Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "id1",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some-user",
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="notifications"
      noTransparent={true}
    >
      <BellOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Notifications"
        id="intro_messages.notifications"
      />
    </Connect(ToggleModalButton)>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test Group Channel should match snapshot, with profiles, without boards 1`] = `
<div
  className="channel-intro d-flex flex-column "
  id="channelIntro"
>
  <div
    className="post-profile-img__container channel-intro-img"
  >
    <ProfilePicture
      hasMention={false}
      isEmoji={false}
      isRHS={false}
      key="introprofilepictureuser1"
      popoverPlacement="right"
      size="xl-custom-GM"
      src="/api/v4/users/user1/image?_=0"
      userId="user1"
      wrapperClass=""
    />
    <ProfilePicture
      hasMention={false}
      isEmoji={false}
      isRHS={false}
      key="introprofilepictureguest1"
      popoverPlacement="right"
      size="xl-custom-GM"
      src="/api/v4/users/guest1/image?_=0"
      userId="guest1"
      wrapperClass=""
    />
  </div>
  <h2
    className="channel-intro__title"
  >
    test channel
  </h2>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="This is the start of your group message history with {names}.\\\\nMessages and files shared here are not shown to anyone else outside the group."
      id="intro_messages.GM"
      values={
        Object {
          "names": "test channel",
        }
      }
    />
  </p>
  <div
    className="d-flex flex-row"
  >
    <Connect(ToggleModalButton)
      ariaLabel="Add people"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "G",
            "update_at": 1508265709607,
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="channel_invite"
      noTransparent={true}
    >
      <AccountPlusOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Add people"
        id="channel_info_rhs.top_buttons.add_people"
      />
    </Connect(ToggleModalButton)>
    <Connect(ToggleModalButton)
      ariaLabel="Edit header"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "G",
            "update_at": 1508265709607,
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="edit_channel_header"
      noTransparent={true}
    >
      <PencilOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Edit header"
        id="intro_messages.editHeader"
      />
    </Connect(ToggleModalButton)>
    <Connect(ToggleModalButton)
      ariaLabel="Notifications"
      className="intro-links  channelIntroButton"
      dialogProps={
        Object {
          "channel": Object {
            "create_at": 1508265709607,
            "creator_id": "creator_id",
            "delete_at": 0,
            "display_name": "test channel",
            "header": "test",
            "id": "channel_id",
            "last_post_at": 1508265709635,
            "name": "testing",
            "purpose": "test",
            "team_id": "team-id",
            "type": "G",
            "update_at": 1508265709607,
          },
          "currentUser": Object {
            "auth_service": "",
            "bot_description": "",
            "create_at": 0,
            "delete_at": 0,
            "email": "",
            "first_name": "",
            "id": "id1",
            "is_bot": false,
            "last_activity_at": 0,
            "last_name": "",
            "last_password_update": 0,
            "last_picture_update": 0,
            "locale": "",
            "mfa_active": false,
            "nickname": "",
            "notify_props": Object {
              "channel": "false",
              "comments": "never",
              "desktop": "default",
              "desktop_sound": "false",
              "email": "false",
              "first_name": "false",
              "mark_unread": "mention",
              "mention_keys": "",
              "push": "none",
              "push_status": "offline",
            },
            "password": "",
            "position": "",
            "props": Object {},
            "roles": "",
            "terms_of_service_create_at": 0,
            "terms_of_service_id": "",
            "update_at": 0,
            "username": "some-user",
          },
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      modalId="notifications"
      noTransparent={true}
    >
      <BellOutlineIcon
        size={24}
      />
      <MemoizedFormattedMessage
        defaultMessage="Notifications"
        id="intro_messages.notifications"
      />
    </Connect(ToggleModalButton)>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test OFFTOPIC Channel should match snapshot, with boards 1`] = `
<div
  className="channel-intro  d-flex flex-column "
  id="channelIntro"
>
  <PublicChannelIntroSvg />
  <h2
    className="channel-intro__title"
  >
    test channel
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledLockOutlineIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to the {name} channel. Add some more team members to the channel or start a conversation below."
      id="intro_messages.anyMember"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ToggleModalButton)
        ariaLabel="Add people"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "off-topic",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="channel_invite"
        noTransparent={true}
      >
        <AccountPlusOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Add people"
          id="channel_info_rhs.top_buttons.add_people"
        />
      </Connect(ToggleModalButton)>
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "off-topic",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "off-topic",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
    </span>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test OFFTOPIC Channel should match snapshot, without boards 1`] = `
<div
  className="channel-intro  d-flex flex-column "
  id="channelIntro"
>
  <PublicChannelIntroSvg />
  <h2
    className="channel-intro__title"
  >
    test channel
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledLockOutlineIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to the {name} channel. Add some more team members to the channel or start a conversation below."
      id="intro_messages.anyMember"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ToggleModalButton)
        ariaLabel="Add people"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "off-topic",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="channel_invite"
        noTransparent={true}
      >
        <AccountPlusOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Add people"
          id="channel_info_rhs.top_buttons.add_people"
        />
      </Connect(ToggleModalButton)>
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "off-topic",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "off-topic",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
    </span>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test Open Channel should match snapshot, with boards 1`] = `
<div
  className="channel-intro  d-flex flex-column "
  id="channelIntro"
>
  <PublicChannelIntroSvg />
  <h2
    className="channel-intro__title"
  >
    test channel
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledLockOutlineIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to the {name} channel. Add some more team members to the channel or start a conversation below."
      id="intro_messages.anyMember"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ToggleModalButton)
        ariaLabel="Add people"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "testing",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="channel_invite"
        noTransparent={true}
      >
        <AccountPlusOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Add people"
          id="channel_info_rhs.top_buttons.add_people"
        />
      </Connect(ToggleModalButton)>
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "testing",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "testing",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
    </span>
  </div>
</div>
`;

exports[`components/post_view/ChannelIntroMessages test Open Channel should match snapshot, without boards 1`] = `
<div
  className="channel-intro  d-flex flex-column "
  id="channelIntro"
>
  <PublicChannelIntroSvg />
  <h2
    className="channel-intro__title"
  >
    test channel
  </h2>
  <p
    className="channel-intro__desc"
  >
    <_StyledLockOutlineIcon
      size={14}
    />
    <span>
      <MemoizedFormattedMessage
        defaultMessage="Public channel {name} created by {creator} {date}."
        id="intro_messages.creator"
        values={
          Object {
            "creator": "creatorName",
            "date": <FormattedDate
              day="2-digit"
              month="long"
              value={1508265709607}
              year="numeric"
            />,
            "name": "test channel",
          }
        }
      />
    </span>
  </p>
  <p
    className="channel-intro__content"
  >
    <MemoizedFormattedMessage
      defaultMessage="Welcome to the {name} channel. Add some more team members to the channel or start a conversation below."
      id="intro_messages.anyMember"
      values={
        Object {
          "name": "test channel",
        }
      }
    />
  </p>
  <div
    className="channel-intro__actions"
  >
    <span
      className="d-flex flex-row"
    >
      <Connect(ToggleModalButton)
        ariaLabel="Add people"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "testing",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="channel_invite"
        noTransparent={true}
      >
        <AccountPlusOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Add people"
          id="channel_info_rhs.top_buttons.add_people"
        />
      </Connect(ToggleModalButton)>
      <Connect(ChannelPermissionGate)
        channelId="channel_id"
        permissions={
          Array [
            "manage_public_channel_properties",
          ]
        }
        teamId="team-id"
      >
        <Connect(ToggleModalButton)
          ariaLabel="Edit header"
          className="intro-links  channelIntroButton withSvg"
          dialogProps={
            Object {
              "channel": Object {
                "create_at": 1508265709607,
                "creator_id": "creator_id",
                "delete_at": 0,
                "display_name": "test channel",
                "header": "test",
                "id": "channel_id",
                "last_post_at": 1508265709635,
                "name": "testing",
                "purpose": "test",
                "team_id": "team-id",
                "type": "O",
                "update_at": 1508265709607,
              },
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          modalId="edit_channel_header"
          noTransparent={true}
        >
          <PencilOutlineIcon
            size={24}
          />
          <MemoizedFormattedMessage
            defaultMessage="Edit header"
            id="intro_messages.editHeader"
          />
        </Connect(ToggleModalButton)>
      </Connect(ChannelPermissionGate)>
      <Connect(ToggleModalButton)
        ariaLabel="Notifications"
        className="intro-links  channelIntroButton withSvg"
        dialogProps={
          Object {
            "channel": Object {
              "create_at": 1508265709607,
              "creator_id": "creator_id",
              "delete_at": 0,
              "display_name": "test channel",
              "header": "test",
              "id": "channel_id",
              "last_post_at": 1508265709635,
              "name": "testing",
              "purpose": "test",
              "team_id": "team-id",
              "type": "O",
              "update_at": 1508265709607,
            },
            "currentUser": Object {
              "auth_service": "",
              "bot_description": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "",
              "first_name": "",
              "id": "id1",
              "is_bot": false,
              "last_activity_at": 0,
              "last_name": "",
              "last_password_update": 0,
              "last_picture_update": 0,
              "locale": "",
              "mfa_active": false,
              "nickname": "",
              "notify_props": Object {
                "channel": "false",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "false",
                "email": "false",
                "first_name": "false",
                "mark_unread": "mention",
                "mention_keys": "",
                "push": "none",
                "push_status": "offline",
              },
              "password": "",
              "position": "",
              "props": Object {},
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "",
              "update_at": 0,
              "username": "some-user",
            },
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        modalId="notifications"
        noTransparent={true}
      >
        <BellOutlineIcon
          size={24}
        />
        <MemoizedFormattedMessage
          defaultMessage="Notifications"
          id="intro_messages.notifications"
        />
      </Connect(ToggleModalButton)>
    </span>
  </div>
</div>
`;
